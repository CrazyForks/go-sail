package utils

import (
	"strings"
	"testing"

	"github.com/stretchr/testify/assert"
)

var certStrsDeprecated = []string{`-----BEGIN CERTIFICATE-----
MIIGbDCCBNSgAwIBAgIQSnbSH3zJ0nERRqzFhlnSLzANBgkqhkiG9w0BAQwFADBZ
MQswCQYDVQQGEwJDTjElMCMGA1UEChMcVHJ1c3RBc2lhIFRlY2hub2xvZ2llcywg
SW5jLjEjMCEGA1UEAxMaVHJ1c3RBc2lhIFJTQSBEViBUTFMgQ0EgRzIwHhcNMjMx
MDA2MDAwMDAwWhcNMjQxMDA1MjM1OTU5WjAcMRowGAYDVQQDExFibG9nLmtlZXBj
aGVuLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAL1Gq7i71E/j
ujt3lW4VaVG1XaeWcTwDHB5FrYo2h0TEljAtQXffZTnGyRBleQ+a3/LKjxFoRsqu
fS7rOh32ocAHWi4psRHREoAbeWHXrpswfj4yotZAgpBS9+Jppq+y8NXp89LX5j54
VlJO4F1y6O8HxKB3tSreo6NRww3Mkms3M5Z8yx+7sYydHAh8N+UcY9S8MsnQO2uw
FrHezwaBs47zVLPTN5w0tM8R5y9iPN9NahafxuuXIU2teIZBDJSRlKkQduxbSePu
g8tcJvMbqL3PceTv6Wsf3rvoVrvR6pYflwHZJt1ceZIc7u+ArcQxVfCXOpU34Lvz
3A4SUPppiM8CAwEAAaOCAuswggLnMB8GA1UdIwQYMBaAFF86fBEQfgxncWHci6O1
AANn9VccMB0GA1UdDgQWBBQjj/KaSL1+PuqBX49sUDlTZvyXNjAOBgNVHQ8BAf8E
BAMCBaAwDAYDVR0TAQH/BAIwADAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUH
AwIwSQYDVR0gBEIwQDA0BgsrBgEEAbIxAQICMTAlMCMGCCsGAQUFBwIBFhdodHRw
czovL3NlY3RpZ28uY29tL0NQUzAIBgZngQwBAgEwfQYIKwYBBQUHAQEEcTBvMEIG
CCsGAQUFBzAChjZodHRwOi8vY3J0LnRydXN0LXByb3ZpZGVyLmNuL1RydXN0QXNp
YVJTQURWVExTQ0FHMi5jcnQwKQYIKwYBBQUHMAGGHWh0dHA6Ly9vY3NwLnRydXN0
LXByb3ZpZGVyLmNuMBwGA1UdEQQVMBOCEWJsb2cua2VlcGNoZW4uY29tMIIBfgYK
KwYBBAHWeQIEAgSCAW4EggFqAWgAdgB2/4g/Crb7lVHCYcz1h7o0tKTNuyncaEIK
n+ZnTFo6dAAAAYsDhokCAAAEAwBHMEUCIEm6TpWhoXro5IByPt7R0Y2cNCoCuLeB
qqSLdOTLdPOsAiEAi/de3wCUwQ3J6votPszcRXeGbBIqKTgxZX47onH88qoAdgDa
tr9rP7W2Ip+bwrtca+hwkXFsu1GEhTS9pD0wSNf7qwAAAYsDholZAAAEAwBHMEUC
IA3cG3Ocwaa/ZWyWPMk7I0yvGk/2zPqHcH9B3UCbyAvTAiEAzJyKXAJaAIWNPQh/
AcYPxP71YkCe3xmjcjWDASh8CbMAdgDuzdBk1dsazsVct520zROiModGfLzs3sNR
SFlGcR+1mwAAAYsDhokxAAAEAwBHMEUCIQDAKZGc7N/ME/7zzZKE5hKNkLcuuQG/
xkSFWU9QUr4pNAIgUbbrNyWpgpgeGN+d6cIR9bJB8q/D2DMj5U9/SegGzwYwDQYJ
KoZIhvcNAQEMBQADggGBAIsobwAtfNSyqAUUHCEdWQ+xOaAYGvSdUyvXz0ULoiRI
EXZVkjyMCOlwWXYL8k+T9OM5gc+c23ZnUkkRZNqXEue2lM0zB3owX4EAlOLan/Pw
blRYSxN3ztXgU/XEkgCI5vJxCloNcxQdXyVkMnDprbuqas2kSQDU3/OGhUxN2OC9
rt5Wz4npSb81rrrfSP+xATBBVzOOYU0Hw/o69ulYmUkiuGx2ohvZSxxREM0MlJkA
WKFpkAUG6+kyomdQRme/rB+JOrRcoCM74uD5cjs+GqWz5ZhDyMZ2CX3+laPyjuib
86CVgX9pMYFteeiGZmDAe7WDbqw3NaUFeZ4QR0a1Eh0WdTqgN8yNnadircLUpG0v
Ep66oxXhWb2j/L+QNalRt7vnZ2gLCOUnCrxxD3nrk72fW4s0LlZF6xvSWapq2GIF
Iwh4MhZDBkOLG7r8ox9SYdnup03DhODRoRXOhx6o7HgAz6bvEceqNpcSspb8ZWlF
cZuZ+Dgz14h5XwpEjy419w==
-----END CERTIFICATE-----
-----BEGIN CERTIFICATE-----
MIIFBzCCA++gAwIBAgIRALIM7VUuMaC/NDp1KHQ76aswDQYJKoZIhvcNAQELBQAw
ezELMAkGA1UEBhMCR0IxGzAZBgNVBAgMEkdyZWF0ZXIgTWFuY2hlc3RlcjEQMA4G
A1UEBwwHU2FsZm9yZDEaMBgGA1UECgwRQ29tb2RvIENBIExpbWl0ZWQxITAfBgNV
BAMMGEFBQSBDZXJ0aWZpY2F0ZSBTZXJ2aWNlczAeFw0yMjAxMTAwMDAwMDBaFw0y
ODEyMzEyMzU5NTlaMFkxCzAJBgNVBAYTAkNOMSUwIwYDVQQKExxUcnVzdEFzaWEg
VGVjaG5vbG9naWVzLCBJbmMuMSMwIQYDVQQDExpUcnVzdEFzaWEgUlNBIERWIFRM
UyBDQSBHMjCCAaIwDQYJKoZIhvcNAQEBBQADggGPADCCAYoCggGBAKjGDe0GSaBs
Yl/VhMaTM6GhfR1TAt4mrhN8zfAMwEfLZth+N2ie5ULbW8YvSGzhqkDhGgSBlafm
qq05oeESrIJQyz24j7icGeGyIZ/jIChOOvjt4M8EVi3O0Se7E6RAgVYcX+QWVp5c
Sy+l7XrrtL/pDDL9Bngnq/DVfjCzm5ZYUb1PpyvYTP7trsV+yYOCNmmwQvB4yVjf
IIpHC1OcsPBntMUGeH1Eja4D+qJYhGOxX9kpa+2wTCW06L8T6OhkpJWYn5JYiht5
8exjAR7b8Zi3DeG9oZO5o6Qvhl3f8uGU8lK1j9jCUN/18mI/5vZJ76i+hsgdlfZB
Rh5lmAQjD80M9TY+oD4MYUqB5XrigPfFAUwXFGehhlwCVw7y6+5kpbq/NpvM5Ba8
SeQYUUuMA8RXpTtGlrrTPqJryfa55hTuX/ThhX4gcCVkbyujo0CYr+Uuc14IOyNY
1fD0/qORbllbgV41wiy/2ZUWZQUodqHWkjT1CwIMbQOY5jmrSYGBwwIDAQABo4IB
JjCCASIwHwYDVR0jBBgwFoAUoBEKIz6W8Qfs4q8p74Klf9AwpLQwHQYDVR0OBBYE
FF86fBEQfgxncWHci6O1AANn9VccMA4GA1UdDwEB/wQEAwIBhjASBgNVHRMBAf8E
CDAGAQH/AgEAMB0GA1UdJQQWMBQGCCsGAQUFBwMBBggrBgEFBQcDAjAiBgNVHSAE
GzAZMA0GCysGAQQBsjEBAgIxMAgGBmeBDAECATBDBgNVHR8EPDA6MDigNqA0hjJo
dHRwOi8vY3JsLmNvbW9kb2NhLmNvbS9BQUFDZXJ0aWZpY2F0ZVNlcnZpY2VzLmNy
bDA0BggrBgEFBQcBAQQoMCYwJAYIKwYBBQUHMAGGGGh0dHA6Ly9vY3NwLmNvbW9k
b2NhLmNvbTANBgkqhkiG9w0BAQsFAAOCAQEAHMUom5cxIje2IiFU7mOCsBr2F6CY
eU5cyfQ/Aep9kAXYUDuWsaT85721JxeXFYkf4D/cgNd9+hxT8ZeDOJrn+ysqR7NO
2K9AdqTdIY2uZPKmvgHOkvH2gQD6jc05eSPOwdY/10IPvmpgUKaGOa/tyygL8Og4
3tYyoHipMMnS4OiYKakDJny0XVuchIP7ZMKiP07Q3FIuSS4omzR77kmc75/6Q9dP
v4wa90UCOn1j6r7WhMmX3eT3Gsdj3WMe9bYD0AFuqa6MDyjIeXq08mVGraXiw73s
Zale8OMckn/BU3O/3aFNLHLfET2H2hT6Wb3nwxjpLIfXmSVcVd8A58XH0g==
-----END CERTIFICATE-----`,
	`-----BEGIN CERTIFICATE-----
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
-----END CERTIFICATE-----
-----BEGIN CERTIFICATE-----
MIIFBzCCA++gAwIBAgIRALIM7VUuMaC/NDp1KHQ76aswDQYJKoZIhvcNAQELBQAw
ezELMAkGA1UEBhMCR0IxGzAZBgNVBAgMEkdyZWF0ZXIgTWFuY2hlc3RlcjEQMA4G
A1UEBwwHU2FsZm9yZDEaMBgGA1UECgwRQ29tb2RvIENBIExpbWl0ZWQxITAfBgNV
BAMMGEFBQSBDZXJ0aWZpY2F0ZSBTZXJ2aWNlczAeFw0yMjAxMTAwMDAwMDBaFw0y
ODEyMzEyMzU5NTlaMFkxCzAJBgNVBAYTAkNOMSUwIwYDVQQKExxUcnVzdEFzaWEg
VGVjaG5vbG9naWVzLCBJbmMuMSMwIQYDVQQDExpUcnVzdEFzaWEgUlNBIERWIFRM
UyBDQSBHMjCCAaIwDQYJKoZIhvcNAQEBBQADggGPADCCAYoCggGBAKjGDe0GSaBs
Yl/VhMaTM6GhfR1TAt4mrhN8zfAMwEfLZth+N2ie5ULbW8YvSGzhqkDhGgSBlafm
qq05oeESrIJQyz24j7icGeGyIZ/jIChOOvjt4M8EVi3O0Se7E6RAgVYcX+QWVp5c
Sy+l7XrrtL/pDDL9Bngnq/DVfjCzm5ZYUb1PpyvYTP7trsV+yYOCNmmwQvB4yVjf
IIpHC1OcsPBntMUGeH1Eja4D+qJYhGOxX9kpa+2wTCW06L8T6OhkpJWYn5JYiht5
8exjAR7b8Zi3DeG9oZO5o6Qvhl3f8uGU8lK1j9jCUN/18mI/5vZJ76i+hsgdlfZB
Rh5lmAQjD80M9TY+oD4MYUqB5XrigPfFAUwXFGehhlwCVw7y6+5kpbq/NpvM5Ba8
SeQYUUuMA8RXpTtGlrrTPqJryfa55hTuX/ThhX4gcCVkbyujo0CYr+Uuc14IOyNY
1fD0/qORbllbgV41wiy/2ZUWZQUodqHWkjT1CwIMbQOY5jmrSYGBwwIDAQABo4IB
JjCCASIwHwYDVR0jBBgwFoAUoBEKIz6W8Qfs4q8p74Klf9AwpLQwHQYDVR0OBBYE
FF86fBEQfgxncWHci6O1AANn9VccMA4GA1UdDwEB/wQEAwIBhjASBgNVHRMBAf8E
CDAGAQH/AgEAMB0GA1UdJQQWMBQGCCsGAQUFBwMBBggrBgEFBQcDAjAiBgNVHSAE
GzAZMA0GCysGAQQBsjEBAgIxMAgGBmeBDAECATBDBgNVHR8EPDA6MDigNqA0hjJo
dHRwOi8vY3JsLmNvbW9kb2NhLmNvbS9BQUFDZXJ0aWZpY2F0ZVNlcnZpY2VzLmNy
bDA0BggrBgEFBQcBAQQoMCYwJAYIKwYBBQUHMAGGGGh0dHA6Ly9vY3NwLmNvbW9k
b2NhLmNvbTANBgkqhkiG9w0BAQsFAAOCAQEAHMUom5cxIje2IiFU7mOCsBr2F6CY
eU5cyfQ/Aep9kAXYUDuWsaT85721JxeXFYkf4D/cgNd9+hxT8ZeDOJrn+ysqR7NO
2K9AdqTdIY2uZPKmvgHOkvH2gQD6jc05eSPOwdY/10IPvmpgUKaGOa/tyygL8Og4
3tYyoHipMMnS4OiYKakDJny0XVuchIP7ZMKiP07Q3FIuSS4omzR77kmc75/6Q9dP
v4wa90UCOn1j6r7WhMmX3eT3Gsdj3WMe9bYD0AFuqa6MDyjIeXq08mVGraXiw73s
Zale8OMckn/BU3O/3aFNLHLfET2H2hT6Wb3nwxjpLIfXmSVcVd8A58XH0g==
-----END CERTIFICATE-----`}

var keyStrsDeprecated = []string{
	`-----BEGIN RSA PRIVATE KEY-----
MIIEpAIBAAKCAQEAvUaruLvUT+O6O3eVbhVpUbVdp5ZxPAMcHkWtijaHRMSWMC1B
d99lOcbJEGV5D5rf8sqPEWhGyq59Lus6HfahwAdaLimxEdESgBt5YdeumzB+PjKi
1kCCkFL34mmmr7Lw1enz0tfmPnhWUk7gXXLo7wfEoHe1Kt6jo1HDDcySazczlnzL
H7uxjJ0cCHw35Rxj1LwyydA7a7AWsd7PBoGzjvNUs9M3nDS0zxHnL2I8301qFp/G
65chTa14hkEMlJGUqRB27FtJ4+6Dy1wm8xuovc9x5O/pax/eu+hWu9Hqlh+XAdkm
3Vx5khzu74CtxDFV8Jc6lTfgu/PcDhJQ+mmIzwIDAQABAoIBAFae54qxBw6SqRF6
/jt1eBAJQPWnz2WIBM/D0pJMtyYdE6CzrWD3LyO8WhrzXW5rUe8SjVwJjVBHf4m/
5AZ/bvHrS3WR5fPB60YOjMPeyY1DKZs8YDJOLpJvLfuDn2GMMlSrb0cAQGI5f0PG
zj5mDr0JoI5Rims2ncvp6KrBgwamYBS8TXOGxGNY3VOyhFzTmzgDNhBM3PNbZ/bH
rwbonVbFAlJrAHq1xmTf+FDtPHKAlFkgttzyanaHHG0f+q9pm53eLOe20JvQT0Zb
bh0G+Lu4D5PQ5FbDjD0rjyS8LeuZtUYHoX5qeE9FkqyZfB1wh+vIW6Lt68aHBRpI
Z+ijHdUCgYEA7cf6u9EDcN7F0RWXrui20SSdbSv0Eu8EJqIKa0wozZbNro4YMFLT
HpgiNM6xUn6bcRSd/t2RmqnpKNTQbAm4fdfCvWtk4ie/Vx6ZLQkZdOKz4DP+MinL
1lLy1DebhvaCJFQhGflXyAW0CdXvOM6Yv+w6YWYguSGXXTx5h3pW3jUCgYEAy8dG
dZS3nPwiedeVtrzD31knJhsRQDn9UQB27G95EhX77UdAOJXwGkLiA0cZ7ses5k4L
bTb1ppaklvH4CQ9iXWOYQh1nJ+5u6qfmICLjYyY3oH4kMGKLhIOKSfQjuZt+3dBR
erzMVPmZyELmW3o0waFvKoqkMWkhZzp3v7snu3MCgYEAhK326cA6VEvqQ73xsqam
BFOTCGzjN4FpZok6mR6ZEgbY5FLjimtc5JBtXdwLtAVzhQjFFIbcDVpMAP2nAvH1
oTq4rmtzkoItUVaAkFGog8FQL4WzjJgn5oLIfsQ8o3V/rvfGtLCeW71a9bYLUz5s
m4McHGcZUVQ+Gsd45LDOMhUCgYEAg75n3SiytLmFiIRKdIQBlmpLFyW0t3NGRJIq
UJ2ZBopT/4lrCapWOoQ3HqtfJrLNI3AdjxRTKMqHylbRZvodPAdhrozX3kcWSnsW
Gnyzyawxln824lkzng50328Jkbvn/3vo0ZMx/1YHiCNITqfpZ6348uYDVTaEs/pm
5PwYqeUCgYBeN0kp1qCp9xZPkUzAaqVlB4kJf8/ylQe9HH3wh09jBgavmJvSbhkb
X3nWsyESM+vsOVVWZ/hyfYZIYjqXYtKWAmxJ/egVoTih7O/dE07o6R2lATjRtJjF
MICw1ypv3lZOxswmRzDNr9K5kwUaRcBdBCUXJ58qwaKQJ1OK3qe5Gw==
-----END RSA PRIVATE KEY-----
`,
	`-----BEGIN RSA PRIVATE KEY-----
MIIEogIBAAKCAQEAoSUve1xXMRM93eIB5ni0BvTg7gN7lvACx5smlTd4jy//yaHk
rB/zxITbyNh0pTq6n8ri6sfKxbDSxdFO1YejnkbJNDd4qxwm6g8bYWSD57NFeTBV
GmyTNlBaJ9m6UIKDW7pKGTSPgMSfGZ5qLtoUuwViDFqSjtow61sj23ya+W7u69mt
L48T+As3hi32nv7Qo2KOCtf2qlugEbli2sp0iOrClFTUxKSPzFqHQaEnV0MxnW+5
/aaD4tyiDNhOp0GrLqBO1XUwX36LvXhPnBckOsMMdsKWcjvshjhHR/5rNGD+pcXb
jkYVVL82Ezxzm3r0vUMhnA8H2KMe8JtBDfw1MwIDAQABAoIBAGs3JoRZR9nrB3qd
aM5C+OS4AP/baVtfjTnpTJ5zLc93DCTHhjHPgIz8KI9VFSbqEElI3/l9vLgTkejz
/hOsD3y7dBs93Rdbv7hzHLCMBAchC9Q6CCVwn/G/PHzPLFtsuqFJLQvgIKp4J7MP
524Mw0Y7qqS1jlVlbq7pEM5z9ViHG9nljlAQEjrhS8w965X8kaBLoYy2fp0q49l+
yPBAalryHyGxCueu2xHIaxhZUh0zl/aNnkgH0VaDOV4l4TSd8qlWv+1hdbhcUT+K
crLlr0rIK45cVFeceUzK4BE5DE31G07LQ5Y5Z0jgUz82m2jAtDVCINhY6VlzMrzk
RtMhAgECgYEAwEmbfNznApjzkP62OAln61WYloivo596VjPg3zc5Bq9U8TxJDSys
TSZaqSOC3iRCQq+p5JoLzIJjjovzOQdOdspq6FM0tS+iqqNV9AzPdgqMx5llipDX
xkK4jQnIJvF3W90ghnkOzrt4SJffqQc66Kqb77gHFZJ7JWjEVSjKDXMCgYEA1on/
xE9g08FgRWPVEjw1Rk/BFDo5uuQfWdtjUHkHzAxg5Vp8whIToGqogG9k72GcCfJF
vxfPE+n4DiogJpbR1oedQ1o0EDrQYto8XWgzQojYFYeHoXNvFnOR4CtTAJAGraJO
ASpeiEU00hompSYz/oLSps2v9w0KJhpWy0GDSUECgYBhF8nPbqunABxcpoDUIsu6
ZOo7eKFXeXuIc4GktHmzCm1Vsh8g6+HEww0cQrYd/SkICzM6Hx6+EUi7/aa+sRXJ
ncQFs531ryvwBbGtHZrT+9fCIY7IPQL3NVGCxeGu6FZgqHN380Cq2raN0UI6U1BH
k35RuRa6qdBMv24DoikESQKBgEQysARWe2A1C4ZjWtsmGoVUWvs0Gx/m3nRxAhwV
rT3W/YJLBnemyWhoH1JclshlzfV3d2Zsih45dOoDyB6cOO4qQ/qiFQTHvXB/EUtc
EVdoKtCFOb8/86M+b7PD8emu3wCZJJTIRC6rWUQknf5Hq6WPLqlpnzM4iO5d1xNb
qwFBAoGATGyfZtwFkB5wCCIdioWQcRmFlSV8fo5kPZy3D1P9Tmds4gVzqJ3t76Pb
1wmU62mQNXrzEkf8BXSoAGGvrBhSg13Aw14JS/zP7KGsLOgdkgMkoZke8Ttz8g5q
jIKHPCMoHwDou1FG4wG0TqdsZyxygt9v8hXqfjSmMXBVYPrq17Q=
-----END RSA PRIVATE KEY-----`}

var domainsDeprecated = []string{"blog.keepchen.com", "stardots.ink"}

func TestReportCertValidity(t *testing.T) {
	t.Run("ReportCertValidity", func(t *testing.T) {
		for idx, str := range certStrsDeprecated {
			t.Log(ReportCertValidity(domainsDeprecated[idx], []byte(str)))
		}
	})

	t.Run("ReportCertValidity-Error", func(t *testing.T) {
		for idx, str := range certStrsDeprecated {
			t.Log(ReportCertValidity(domainsDeprecated[idx], []byte(strings.Replace(str, "a", "b", 1))))
		}
	})

	t.Run("ReportCertValidity-Error2", func(t *testing.T) {
		for idx := range certStrsDeprecated {
			t.Log(ReportCertValidity(domainsDeprecated[idx], []byte(``)))
		}
	})
}

func TestReportCertAndKeyWhetherMatch(t *testing.T) {
	t.Run("ReportCertAndKeyWhetherMatch", func(t *testing.T) {
		for i := 0; i < len(keyStrsDeprecated); i++ {
			t.Log("index:", i)
			match, err := ReportCertAndKeyWhetherMatch([]byte(certStrsDeprecated[i]), []byte(keyStrsDeprecated[i]))
			assert.Equal(t, err, nil)
			assert.Equal(t, match, true)
		}
	})

	t.Run("ReportCertAndKeyWhetherMatch-Error", func(t *testing.T) {
		for i := 0; i < len(keyStrsDeprecated); i++ {
			t.Log("index:", i)
			match, err := ReportCertAndKeyWhetherMatch([]byte(``), []byte(keyStrsDeprecated[i]))
			assert.Error(t, err)
			assert.NotEqual(t, match, true)
		}
	})

	t.Run("ReportCertAndKeyWhetherMatch-Error2", func(t *testing.T) {
		for i := 0; i < len(keyStrsDeprecated); i++ {
			t.Log("index:", i)
			match, err := ReportCertAndKeyWhetherMatch([]byte(certStrsDeprecated[i]), []byte(``))
			assert.Error(t, err)
			assert.NotEqual(t, match, true)
		}
	})

	t.Run("ReportCertAndKeyWhetherMatch-Error3", func(t *testing.T) {
		for i := 0; i < len(keyStrsDeprecated); i++ {
			t.Log("index:", i)
			match, err := ReportCertAndKeyWhetherMatch(
				[]byte(strings.Replace(certStrsDeprecated[i], "M", "a", 1)),
				[]byte(keyStrsDeprecated[i]))
			assert.Error(t, err)
			assert.NotEqual(t, true, match)
		}
	})

	t.Run("ReportCertAndKeyWhetherMatch-Error4", func(t *testing.T) {
		for i := 0; i < len(keyStrsDeprecated); i++ {
			t.Log("index:", i)
			match, err := ReportCertAndKeyWhetherMatch(
				[]byte(certStrsDeprecated[i]),
				[]byte(strings.Replace(keyStrsDeprecated[i], "M", "a", 1)))
			assert.Error(t, err)
			assert.NotEqual(t, true, match)
		}
	})
}
